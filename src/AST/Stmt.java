package AST;

/**
 * 语句抽象基类 - 编译器中的"行动指令"
 * 
 * 这个类是所有语句节点的基础，就像军队中的"作战指令"模板。
 * 每个语句都代表程序要执行的一个具体动作，比如：
 * - 赋值语句：把某个值存储到变量中
 * - 条件语句：根据条件选择不同的执行路径
 * - 循环语句：重复执行某段代码
 * - 函数调用：执行特定的功能模块
 * 
 * 语句与表达式的区别：
 * - 表达式产生值（像数学公式计算结果）
 * - 语句执行动作（像具体的操作指令）
 * 
 * 所有语句都必须能够生成对应的中间代码，
 * 就像把高级指令翻译成具体的执行步骤。
 */
public class Stmt extends BlockItem {

    /**
     * 语句的默认构造函数
     * 
     * 作为抽象基类，主要职责是为所有具体的语句类型
     * 提供统一的接口和基础功能。
     */
    public Stmt() {
        // 基类默认构造函数
        // 具体的语句类型会实现自己的构造逻辑
    }
}
